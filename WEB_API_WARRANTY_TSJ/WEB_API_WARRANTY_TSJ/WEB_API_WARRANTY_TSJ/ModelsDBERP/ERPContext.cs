// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WEB_API_WARRANTY_TSJ.ModelsDBERP
{
    public partial class ERPContext : DbContext
    {
        public ERPContext()
        {
        }

        public ERPContext(DbContextOptions<ERPContext> options)
            : base(options)
        {
        }

        public virtual DbSet<MsLogLogin> MsLogLogins { get; set; }
        public virtual DbSet<MsUser> MsUsers { get; set; }
        public virtual DbSet<VLogin> VLogins { get; set; }
        public virtual DbSet<VUser> VUsers { get; set; }
        public virtual DbSet<VUserWh> VUserWhs { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MsLogLogin>(entity =>
            {
                entity.ToTable("MS_LOG_LOGIN");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LoginAt)
                    .HasColumnType("datetime")
                    .HasColumnName("login_at");

                entity.Property(e => e.LoginStatus).HasColumnName("login_status");

                entity.Property(e => e.Message)
                    .IsUnicode(false)
                    .HasColumnName("message");

                entity.Property(e => e.UserId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("user_id");
            });

            modelBuilder.Entity<MsUser>(entity =>
            {
                entity.ToTable("MS_USERS");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Avatar)
                    .IsUnicode(false)
                    .HasColumnName("avatar");

                entity.Property(e => e.CompanyId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("company_id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CustomerId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("customer_id");

                entity.Property(e => e.DeviceId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("device_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.FcmToken)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("fcm_token");

                entity.Property(e => e.GeneralId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("general_id");

                entity.Property(e => e.InvalidLogin).HasColumnName("invalid_login");

                entity.Property(e => e.LastUpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("last_updated_at");

                entity.Property(e => e.Otp)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("otp");

                entity.Property(e => e.Password)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.Pin)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("pin");

                entity.Property(e => e.RefreshToken)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("refresh_token");

                entity.Property(e => e.ResetPassword).HasColumnName("reset_password");

                entity.Property(e => e.RoleId)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("role_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Telepon)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("telepon");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UserErp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("user_erp");

                entity.Property(e => e.UserId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("user_id");

                entity.Property(e => e.Username)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("username");

                entity.Property(e => e.WebId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("web_id");
            });

            modelBuilder.Entity<VLogin>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_LOGIN");

                entity.Property(e => e.CompanyId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("company_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.GeneralId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("general_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InvalidLogin).HasColumnName("invalid_login");

                entity.Property(e => e.Password)
                    .HasMaxLength(128)
                    .IsUnicode(false)
                    .HasColumnName("password");

                entity.Property(e => e.ResetPassword).HasColumnName("reset_password");

                entity.Property(e => e.Role)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("role");

                entity.Property(e => e.RoleId)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("role_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Telepon)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("telepon");

                entity.Property(e => e.UserErp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("user_erp");

                entity.Property(e => e.UserId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("user_id");

                entity.Property(e => e.Username)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<VUser>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_USER");

                entity.Property(e => e.Avatar)
                    .IsUnicode(false)
                    .HasColumnName("avatar");

                entity.Property(e => e.CompanyId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("company_id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.DeviceId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("device_id");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.FcmToken)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("fcm_token");

                entity.Property(e => e.GeneralId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("general_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.InvalidLogin).HasColumnName("invalid_login");

                entity.Property(e => e.LastUpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("last_updated_at");

                entity.Property(e => e.ParentId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("parent_id");

                entity.Property(e => e.ParentName)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("parent_name");

                entity.Property(e => e.ParentPhone)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("parent_phone");

                entity.Property(e => e.RefreshToken)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("refresh_token");

                entity.Property(e => e.ResetPassword).HasColumnName("reset_password");

                entity.Property(e => e.Role)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("role");

                entity.Property(e => e.RoleId)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("role_id");

                entity.Property(e => e.Status).HasColumnName("status");

                entity.Property(e => e.Telepon)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("telepon");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UserErp)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("user_erp");

                entity.Property(e => e.UserId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("user_id");

                entity.Property(e => e.Username)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("username");
            });

            modelBuilder.Entity<VUserWh>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("V_USER_WH");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.DeletedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("deleted_at");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.LastUpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("last_updated_at");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UserId)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("user_id");

                entity.Property(e => e.UserMail)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("user_mail");

                entity.Property(e => e.UserName)
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasColumnName("user_name");

                entity.Property(e => e.UserTelepon)
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("user_telepon");

                entity.Property(e => e.UserWhStatus).HasColumnName("user_wh_status");

                entity.Property(e => e.WhId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("wh_id");

                entity.Property(e => e.WhName)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("wh_name");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}