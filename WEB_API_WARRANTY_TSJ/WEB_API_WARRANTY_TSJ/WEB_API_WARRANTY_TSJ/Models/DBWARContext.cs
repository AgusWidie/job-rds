// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace WEB_API_WARRANTY_TSJ.Models
{
    public partial class DBWARContext : DbContext
    {
        public DBWARContext()
        {
        }

        public DBWARContext(DbContextOptions<DBWARContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ActivationQr> ActivationQrs { get; set; }
        public virtual DbSet<BarcodeSerialQr> BarcodeSerialQrs { get; set; }
        public virtual DbSet<LogError> LogErrors { get; set; }
        public virtual DbSet<LogRequestActivation> LogRequestActivations { get; set; }
        public virtual DbSet<LogWarranty> LogWarranties { get; set; }
        public virtual DbSet<QrCode> QrCodes { get; set; }
        public virtual DbSet<SettingPrinter> SettingPrinters { get; set; }
        public virtual DbSet<TemplatePrint> TemplatePrints { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ActivationQr>(entity =>
            {
                entity.ToTable("ACTIVATION_QR");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActivationCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("activation_code");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("updated_by");
            });

            modelBuilder.Entity<BarcodeSerialQr>(entity =>
            {
                entity.ToTable("BARCODE_SERIAL_QR");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnName("active")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.DeletedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("deleted_at");

                entity.Property(e => e.RegistrationCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("registration_code");

                entity.Property(e => e.SerialCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_code");

                entity.Property(e => e.SerialQrId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("serial_qr_id");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("source");

                entity.Property(e => e.TotalPrint)
                    .HasColumnName("total_print")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");
            });

            modelBuilder.Entity<LogError>(entity =>
            {
                entity.ToTable("LOG_ERROR");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.ErrorDate)
                    .HasColumnType("datetime")
                    .HasColumnName("error_date");

                entity.Property(e => e.LogJson)
                    .HasColumnType("text")
                    .HasColumnName("log_json");

                entity.Property(e => e.ServiceError)
                    .HasColumnType("text")
                    .HasColumnName("service_error");

                entity.Property(e => e.ServiceName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("service_name");
            });

            modelBuilder.Entity<LogRequestActivation>(entity =>
            {
                entity.ToTable("LOG_REQUEST_ACTIVATION");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.LogJsonActivation)
                    .HasColumnType("text")
                    .HasColumnName("log_json_activation");

                entity.Property(e => e.LogRequestId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("log_request_id");
            });

            modelBuilder.Entity<LogWarranty>(entity =>
            {
                entity.ToTable("LOG_WARRANTY");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActivationAt)
                    .HasColumnType("datetime")
                    .HasColumnName("activation_at");

                entity.Property(e => e.ActivationBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("activation_by");

                entity.Property(e => e.ActivationCode)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("activation_code");

                entity.Property(e => e.Additional1)
                    .HasColumnType("text")
                    .HasColumnName("additional_1");

                entity.Property(e => e.Additional2)
                    .HasColumnType("text")
                    .HasColumnName("additional_2");

                entity.Property(e => e.Additional3)
                    .HasColumnType("text")
                    .HasColumnName("additional_3");

                entity.Property(e => e.Additional4)
                    .HasColumnType("text")
                    .HasColumnName("additional_4");

                entity.Property(e => e.Additional5)
                    .HasColumnType("text")
                    .HasColumnName("additional_5");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.CustomerName)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("customer_name");

                entity.Property(e => e.DateOfBirth)
                    .HasColumnType("date")
                    .HasColumnName("date_of_birth");

                entity.Property(e => e.DeletedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("deleted_at");

                entity.Property(e => e.Email)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Gender)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("gender");

                entity.Property(e => e.LogWarrantyId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("log_warranty_id");

                entity.Property(e => e.PlaceOfBirth)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("place_of_birth");

                entity.Property(e => e.ProductCode)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("product_code");

                entity.Property(e => e.QrCode)
                    .HasColumnType("text")
                    .HasColumnName("qr_code");

                entity.Property(e => e.QrCodeFull)
                    .HasColumnType("text")
                    .HasColumnName("qr_code_full");

                entity.Property(e => e.RegistrationAt)
                    .HasColumnType("datetime")
                    .HasColumnName("registration_at");

                entity.Property(e => e.RegistrationBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("registration_by");

                entity.Property(e => e.RegistrationCode)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("registration_code");

                entity.Property(e => e.SerialCode)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("serial_code");

                entity.Property(e => e.Source)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("source");

                entity.Property(e => e.Telephone)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("telephone");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");
            });

            modelBuilder.Entity<QrCode>(entity =>
            {
                entity.ToTable("QR_CODE");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.ActivationCode)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("activation_code");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.DeletedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("deleted_at");

                entity.Property(e => e.QrCodeId)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("qr_code_id");

                entity.Property(e => e.RegistrationCode)
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasColumnName("registration_code");

                entity.Property(e => e.TotalPrint)
                    .HasColumnName("total_print")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");
            });

            modelBuilder.Entity<SettingPrinter>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("SETTING_PRINTER");

                entity.Property(e => e.Active)
                    .HasColumnName("active")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.DeletedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("deleted_at");

                entity.Property(e => e.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("id");

                entity.Property(e => e.PrinterName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("printer_name");

                entity.Property(e => e.PrinterValue)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("printer_value");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");
            });

            modelBuilder.Entity<TemplatePrint>(entity =>
            {
                entity.ToTable("TEMPLATE_PRINT");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Active)
                    .HasColumnName("active")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Base64Logo)
                    .HasColumnType("text")
                    .HasColumnName("base64_logo");

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("created_at");

                entity.Property(e => e.CreatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("created_by");

                entity.Property(e => e.PrintDefault)
                    .HasColumnName("print_default")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Source)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("source");

                entity.Property(e => e.TemplateName)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("template_name");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnType("datetime")
                    .HasColumnName("updated_at");

                entity.Property(e => e.UpdatedBy)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("updated_by");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}