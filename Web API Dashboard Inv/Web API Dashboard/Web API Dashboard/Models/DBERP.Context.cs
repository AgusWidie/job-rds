//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WEB_API_DASHBOARD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBERPEntities : DbContext
    {
        public DBERPEntities()
            : base("name=DBERPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MS_USERS> MS_USERS { get; set; }
        public virtual DbSet<MS_LOG_LOGIN> MS_LOG_LOGIN { get; set; }
        public virtual DbSet<V_LOGIN> V_LOGIN { get; set; }
        public virtual DbSet<USER_ACCESS_DATA> USER_ACCESS_DATA { get; set; }
        public virtual DbSet<V_WORK_ORDER_ASSEMBLY_DASHBOARD> V_WORK_ORDER_ASSEMBLY_DASHBOARD { get; set; }
    
        public virtual ObjectResult<string> SP_RN_REQ_MANUAL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_REQ_MANUAL");
        }
    
        public virtual ObjectResult<string> SP_RN_REQ_MANUAL_DOC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_REQ_MANUAL_DOC");
        }
    
        public virtual ObjectResult<SP_TEMP_DT_OPERATION_SO_Result> SP_TEMP_DT_OPERATION_SO(string operation_id)
        {
            var operation_idParameter = operation_id != null ?
                new ObjectParameter("operation_id", operation_id) :
                new ObjectParameter("operation_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TEMP_DT_OPERATION_SO_Result>("SP_TEMP_DT_OPERATION_SO", operation_idParameter);
        }
    
        public virtual ObjectResult<string> SP_RN_FOAM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_FOAM");
        }
    
        public virtual ObjectResult<string> SP_RN_UOM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_UOM");
        }
    
        public virtual ObjectResult<string> SP_RN_PRODUCT_CATEGORY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_PRODUCT_CATEGORY");
        }
    
        public virtual ObjectResult<string> SP_RN_PRODUCT_GROUP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_PRODUCT_GROUP");
        }
    
        public virtual ObjectResult<string> SP_RN_PRODUCT_TYPE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_PRODUCT_TYPE");
        }
    
        public virtual ObjectResult<string> SP_RN_MACHINE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_MACHINE");
        }
    
        public virtual ObjectResult<string> SP_RN_PRODUCT_VARIANT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_PRODUCT_VARIANT");
        }
    
        public virtual ObjectResult<string> SP_RN_PRODUCT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_PRODUCT");
        }
    
        public virtual ObjectResult<string> SP_RN_SUPPLIER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_SUPPLIER");
        }
    
        public virtual ObjectResult<SP_REPORT_CALCULATE_LOG_STOCK_MOVE> SP_REPORT_CALCULATE_LOG_STOCK_MOVE(string userId, string productId, string startDate, string endDate, string wHID, string companyID)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            var companyIDParameter = companyID != null ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_REPORT_CALCULATE_LOG_STOCK_MOVE>("SP_REPORT_CALCULATE_LOG_STOCK_MOVE", userIdParameter, productIdParameter, startDateParameter, endDateParameter, wHIDParameter, companyIDParameter);
        }
    
        public virtual ObjectResult<SP_REPORT_CALCULATE_LOG_STOCK_MOVE_WAREHOUSE> SP_REPORT_CALCULATE_LOG_STOCK_MOVE_WARHOUSE(string userId, string wHID)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var wHIDParameter = wHID != null ?
                new ObjectParameter("WHID", wHID) :
                new ObjectParameter("WHID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_REPORT_CALCULATE_LOG_STOCK_MOVE_WAREHOUSE>("SP_REPORT_CALCULATE_LOG_STOCK_MOVE_WARHOUSE", userIdParameter, wHIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_DATA_ITEM_SO> SP_GET_DATA_ITEM_SO(string item_code)
        {
            var item_codeParameter = item_code != null ?
                new ObjectParameter("item_code", item_code) :
                new ObjectParameter("item_code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DATA_ITEM_SO>("SP_GET_DATA_ITEM_SO", item_codeParameter);
        }
    
        public virtual ObjectResult<string> SP_RN_INV_TRANSFER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_INV_TRANSFER");
        }
    
        public virtual ObjectResult<string> SP_CHECK_UOM(Nullable<decimal> @long, Nullable<decimal> wide, Nullable<decimal> tall)
        {
            var longParameter = @long.HasValue ?
                new ObjectParameter("long", @long) :
                new ObjectParameter("long", typeof(decimal));
    
            var wideParameter = wide.HasValue ?
                new ObjectParameter("wide", wide) :
                new ObjectParameter("wide", typeof(decimal));
    
            var tallParameter = tall.HasValue ?
                new ObjectParameter("tall", tall) :
                new ObjectParameter("tall", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CHECK_UOM", longParameter, wideParameter, tallParameter);
        }
    
        public virtual ObjectResult<SP_GROUP_ITEM> SP_GROUP_ITEM(Nullable<int> bulan, Nullable<int> tahun, string product_group)
        {
            var bulanParameter = bulan.HasValue ?
                new ObjectParameter("bulan", bulan) :
                new ObjectParameter("bulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GROUP_ITEM>("SP_GROUP_ITEM", bulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_PRODUCT_ITEM> SP_PRODUCT_ITEM(Nullable<int> bulan, Nullable<int> tahun, string product_group)
        {
            var bulanParameter = bulan.HasValue ?
                new ObjectParameter("bulan", bulan) :
                new ObjectParameter("bulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PRODUCT_ITEM>("SP_PRODUCT_ITEM", bulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_RPT_STOCK> SP_RPT_STOCK()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RPT_STOCK>("SP_RPT_STOCK");
        }
    
        public virtual ObjectResult<string> SP_RN_MACHINE_TYPE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_MACHINE_TYPE");
        }
    
        public virtual ObjectResult<SP_GET_PRODUCT_BOM> SP_GET_PRODUCT_BOM(Nullable<int> bomType)
        {
            var bomTypeParameter = bomType.HasValue ?
                new ObjectParameter("BomType", bomType) :
                new ObjectParameter("BomType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PRODUCT_BOM>("SP_GET_PRODUCT_BOM", bomTypeParameter);
        }
    
        public virtual ObjectResult<SP_GET_PRODUCT_BOM_DETAIL> SP_GET_PRODUCT_BOM_DETAIL(Nullable<int> bomType)
        {
            var bomTypeParameter = bomType.HasValue ?
                new ObjectParameter("BomType", bomType) :
                new ObjectParameter("BomType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PRODUCT_BOM_DETAIL>("SP_GET_PRODUCT_BOM_DETAIL", bomTypeParameter);
        }
    
        public virtual ObjectResult<string> SP_RN_OPERATION()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_OPERATION");
        }
    
        public virtual ObjectResult<string> SP_USER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_USER");
        }
    
        public virtual ObjectResult<string> SP_RN_ITEM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_ITEM");
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK> SP_SUMARY_STOCK(Nullable<int> bulan, Nullable<int> tahun, string product_group)
        {
            var bulanParameter = bulan.HasValue ?
                new ObjectParameter("bulan", bulan) :
                new ObjectParameter("bulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK>("SP_SUMARY_STOCK", bulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK_LONG_WIDE> SP_SUMARY_STOCK_LONG_WIDE(Nullable<int> bulan, Nullable<int> tahun, string product_group)
        {
            var bulanParameter = bulan.HasValue ?
                new ObjectParameter("bulan", bulan) :
                new ObjectParameter("bulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK_LONG_WIDE>("SP_SUMARY_STOCK_LONG_WIDE", bulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK_LONG_WIDE_BLOCK> SP_SUMARY_STOCK_LONG_WIDE_BLOCK(Nullable<int> bulan, Nullable<int> tahun, string product_group)
        {
            var bulanParameter = bulan.HasValue ?
                new ObjectParameter("bulan", bulan) :
                new ObjectParameter("bulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK_LONG_WIDE_BLOCK>("SP_SUMARY_STOCK_LONG_WIDE_BLOCK", bulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK_LONG_WIDE_BLOCK_EXPORT> SP_SUMARY_STOCK_LONG_WIDE_BLOCK_EXPORT(Nullable<int> fromBulan, Nullable<int> toBulan, Nullable<int> tahun, string product_group)
        {
            var fromBulanParameter = fromBulan.HasValue ?
                new ObjectParameter("fromBulan", fromBulan) :
                new ObjectParameter("fromBulan", typeof(int));
    
            var toBulanParameter = toBulan.HasValue ?
                new ObjectParameter("toBulan", toBulan) :
                new ObjectParameter("toBulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK_LONG_WIDE_BLOCK_EXPORT>("SP_SUMARY_STOCK_LONG_WIDE_BLOCK_EXPORT", fromBulanParameter, toBulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK_LONG_WIDE_COVER_EXPORT> SP_SUMARY_STOCK_LONG_WIDE_COVER_EXPORT(Nullable<int> fromBulan, Nullable<int> toBulan, Nullable<int> tahun, string product_group)
        {
            var fromBulanParameter = fromBulan.HasValue ?
                new ObjectParameter("fromBulan", fromBulan) :
                new ObjectParameter("fromBulan", typeof(int));
    
            var toBulanParameter = toBulan.HasValue ?
                new ObjectParameter("toBulan", toBulan) :
                new ObjectParameter("toBulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK_LONG_WIDE_COVER_EXPORT>("SP_SUMARY_STOCK_LONG_WIDE_COVER_EXPORT", fromBulanParameter, toBulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK_LONG_WIDE_COVER> SP_SUMARY_STOCK_LONG_WIDE_COVER(Nullable<int> bulan, Nullable<int> tahun, string product_group)
        {
            var bulanParameter = bulan.HasValue ?
                new ObjectParameter("bulan", bulan) :
                new ObjectParameter("bulan", typeof(int));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK_LONG_WIDE_COVER>("SP_SUMARY_STOCK_LONG_WIDE_COVER", bulanParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_DATE_SUMARY_STOCK> SP_DATE_SUMARY_STOCK(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string product_group)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("from", from) :
                new ObjectParameter("from", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("to", to) :
                new ObjectParameter("to", typeof(System.DateTime));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DATE_SUMARY_STOCK>("SP_DATE_SUMARY_STOCK", fromParameter, toParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<string> SP_RN_HD_BOM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_HD_BOM");
        }
    
        public virtual ObjectResult<SP_GET_PRODUCT_BOM_DETAIL_DIMENTION> SP_GET_PRODUCT_BOM_DETAIL_DIMENTION(Nullable<int> bomType, Nullable<decimal> @long, Nullable<decimal> wide)
        {
            var bomTypeParameter = bomType.HasValue ?
                new ObjectParameter("BomType", bomType) :
                new ObjectParameter("BomType", typeof(int));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("long", @long) :
                new ObjectParameter("long", typeof(decimal));
    
            var wideParameter = wide.HasValue ?
                new ObjectParameter("wide", wide) :
                new ObjectParameter("wide", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_PRODUCT_BOM_DETAIL_DIMENTION>("SP_GET_PRODUCT_BOM_DETAIL_DIMENTION", bomTypeParameter, longParameter, wideParameter);
        }
    
        public virtual ObjectResult<SP_GET_DIMENTION_BOM> SP_GET_DIMENTION_BOM(Nullable<int> bomType, string itemId)
        {
            var bomTypeParameter = bomType.HasValue ?
                new ObjectParameter("BomType", bomType) :
                new ObjectParameter("BomType", typeof(int));
    
            var itemIdParameter = itemId != null ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_DIMENTION_BOM>("SP_GET_DIMENTION_BOM", bomTypeParameter, itemIdParameter);
        }
    
        public virtual ObjectResult<string> SP_RN_STOCKOPNAME()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_STOCKOPNAME");
        }
    
        public virtual ObjectResult<SP_ON_HAND_STOCK_OPNAME> SP_ON_HAND_STOCK_OPNAME(string stockOpnameId, string whId, string createBy)
        {
            var stockOpnameIdParameter = stockOpnameId != null ?
                new ObjectParameter("StockOpnameId", stockOpnameId) :
                new ObjectParameter("StockOpnameId", typeof(string));
    
            var whIdParameter = whId != null ?
                new ObjectParameter("WhId", whId) :
                new ObjectParameter("WhId", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ON_HAND_STOCK_OPNAME>("SP_ON_HAND_STOCK_OPNAME", stockOpnameIdParameter, whIdParameter, createByParameter);
        }
    
        public virtual ObjectResult<SP_LIST_DT_QTY_SCAN_OUT_STOCK_OPNAME> SP_LIST_DT_QTY_SCAN_OUT_STOCK_OPNAME(string stockOpnameID, string productID)
        {
            var stockOpnameIDParameter = stockOpnameID != null ?
                new ObjectParameter("StockOpnameID", stockOpnameID) :
                new ObjectParameter("StockOpnameID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LIST_DT_QTY_SCAN_OUT_STOCK_OPNAME>("SP_LIST_DT_QTY_SCAN_OUT_STOCK_OPNAME", stockOpnameIDParameter, productIDParameter);
        }
    
        public virtual ObjectResult<SP_ON_HAND_STOCK_OPNAME_COVER> SP_ON_HAND_STOCK_OPNAME_COVER(string stockOpnameId, string whId, string createBy)
        {
            var stockOpnameIdParameter = stockOpnameId != null ?
                new ObjectParameter("StockOpnameId", stockOpnameId) :
                new ObjectParameter("StockOpnameId", typeof(string));
    
            var whIdParameter = whId != null ?
                new ObjectParameter("WhId", whId) :
                new ObjectParameter("WhId", typeof(string));
    
            var createByParameter = createBy != null ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ON_HAND_STOCK_OPNAME_COVER>("SP_ON_HAND_STOCK_OPNAME_COVER", stockOpnameIdParameter, whIdParameter, createByParameter);
        }
    
        public virtual ObjectResult<SP_LIST_QR_BEFORE_SCAN> SP_LIST_QR_BEFORE_SCAN(string stockOpnameID, string productID)
        {
            var stockOpnameIDParameter = stockOpnameID != null ?
                new ObjectParameter("StockOpnameID", stockOpnameID) :
                new ObjectParameter("StockOpnameID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LIST_QR_BEFORE_SCAN>("SP_LIST_QR_BEFORE_SCAN", stockOpnameIDParameter, productIDParameter);
        }
    
        public virtual ObjectResult<string> SP_RN_SO_IN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_SO_IN");
        }
    
        public virtual ObjectResult<string> SP_RN_WH_IN()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_WH_IN");
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK_LONG_WIDE_BLOCK> SP_SUMARY_STOCK_LONG_WIDE_BLOCK_DAILY(Nullable<System.DateTime> start_date, Nullable<int> tahun, string product_group)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK_LONG_WIDE_BLOCK>("SP_SUMARY_STOCK_LONG_WIDE_BLOCK_DAILY", start_dateParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_SUMARY_STOCK_LONG_WIDE_COVER> SP_SUMARY_STOCK_LONG_WIDE_COVER_DAILY(Nullable<System.DateTime> start_date, Nullable<int> tahun, string product_group)
        {
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var tahunParameter = tahun.HasValue ?
                new ObjectParameter("tahun", tahun) :
                new ObjectParameter("tahun", typeof(int));
    
            var product_groupParameter = product_group != null ?
                new ObjectParameter("product_group", product_group) :
                new ObjectParameter("product_group", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SUMARY_STOCK_LONG_WIDE_COVER>("SP_SUMARY_STOCK_LONG_WIDE_COVER_DAILY", start_dateParameter, tahunParameter, product_groupParameter);
        }
    
        public virtual ObjectResult<SP_REPORT_DETAIL_LOG_STOCK_MOVE_Result> SP_REPORT_DETAIL_LOG_STOCK_MOVE(string userId, string productId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string fromWHId, string toWHId, Nullable<int> scanInOut)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var fromWHIdParameter = fromWHId != null ?
                new ObjectParameter("FromWHId", fromWHId) :
                new ObjectParameter("FromWHId", typeof(string));
    
            var toWHIdParameter = toWHId != null ?
                new ObjectParameter("ToWHId", toWHId) :
                new ObjectParameter("ToWHId", typeof(string));
    
            var scanInOutParameter = scanInOut.HasValue ?
                new ObjectParameter("ScanInOut", scanInOut) :
                new ObjectParameter("ScanInOut", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_REPORT_DETAIL_LOG_STOCK_MOVE_Result>("SP_REPORT_DETAIL_LOG_STOCK_MOVE", userIdParameter, productIdParameter, startDateParameter, endDateParameter, fromWHIdParameter, toWHIdParameter, scanInOutParameter);
        }
    
        public virtual ObjectResult<SP_DT_MATERIAL_BOM> SP_DT_MATERIAL_BOM(Nullable<int> totalQR, string productId)
        {
            var totalQRParameter = totalQR.HasValue ?
                new ObjectParameter("TotalQR", totalQR) :
                new ObjectParameter("TotalQR", typeof(int));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DT_MATERIAL_BOM>("SP_DT_MATERIAL_BOM", totalQRParameter, productIdParameter);
        }
    
        public virtual ObjectResult<SP_DT_MATERIAL_SUMMARY> SP_DT_MATERIAL_SUMMARY(string workOrderId)
        {
            var workOrderIdParameter = workOrderId != null ?
                new ObjectParameter("WorkOrderId", workOrderId) :
                new ObjectParameter("WorkOrderId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DT_MATERIAL_SUMMARY>("SP_DT_MATERIAL_SUMMARY", workOrderIdParameter);
        }
    
        public virtual ObjectResult<SP_WORK_ORDER_ASSEMBLY_LIST> SP_WORK_ORDER_ASSEMBLY_LIST(string companyId, string workOrderDate, string sPKId, string productGroup)
        {
            var companyIdParameter = companyId != null ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(string));
    
            var workOrderDateParameter = workOrderDate != null ?
                new ObjectParameter("WorkOrderDate", workOrderDate) :
                new ObjectParameter("WorkOrderDate", typeof(string));
    
            var sPKIdParameter = sPKId != null ?
                new ObjectParameter("SPKId", sPKId) :
                new ObjectParameter("SPKId", typeof(string));
    
            var productGroupParameter = productGroup != null ?
                new ObjectParameter("ProductGroup", productGroup) :
                new ObjectParameter("ProductGroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_WORK_ORDER_ASSEMBLY_LIST>("SP_WORK_ORDER_ASSEMBLY_LIST", companyIdParameter, workOrderDateParameter, sPKIdParameter, productGroupParameter);
        }
    
        public virtual ObjectResult<SP_DT_MATERIAL_BOM> SP_DT_MATERIAL_BOM_INSUFICIENT(Nullable<int> totalQR, string productId)
        {
            var totalQRParameter = totalQR.HasValue ?
                new ObjectParameter("TotalQR", totalQR) :
                new ObjectParameter("TotalQR", typeof(int));
    
            var productIdParameter = productId != null ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DT_MATERIAL_BOM>("SP_DT_MATERIAL_BOM_INSUFICIENT", totalQRParameter, productIdParameter);
        }
    
        public virtual ObjectResult<string> SP_RN_DISASSEMBLY()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_RN_DISASSEMBLY");
        }
    
        public virtual int SP_UPDATE_SUBMIT_SIPOT(string work_order_id, string product_id, string so_id)
        {
            var work_order_idParameter = work_order_id != null ?
                new ObjectParameter("work_order_id", work_order_id) :
                new ObjectParameter("work_order_id", typeof(string));
    
            var product_idParameter = product_id != null ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(string));
    
            var so_idParameter = so_id != null ?
                new ObjectParameter("so_id", so_id) :
                new ObjectParameter("so_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SUBMIT_SIPOT", work_order_idParameter, product_idParameter, so_idParameter);
        }
    
        public virtual ObjectResult<SP_LIST_COUNT_STOCK_OPNAME> SP_LIST_COUNT_STOCK_OPNAME(string stockOpnameID, string productID)
        {
            var stockOpnameIDParameter = stockOpnameID != null ?
                new ObjectParameter("StockOpnameID", stockOpnameID) :
                new ObjectParameter("StockOpnameID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LIST_COUNT_STOCK_OPNAME>("SP_LIST_COUNT_STOCK_OPNAME", stockOpnameIDParameter, productIDParameter);
        }
    
        public virtual ObjectResult<SP_LIST_COUNT_STOCK_OPNAME_COVER> SP_LIST_COUNT_STOCK_OPNAME_COVER(string idStock, string stockOpnameID, string productID)
        {
            var idStockParameter = idStock != null ?
                new ObjectParameter("IdStock", idStock) :
                new ObjectParameter("IdStock", typeof(string));
    
            var stockOpnameIDParameter = stockOpnameID != null ?
                new ObjectParameter("StockOpnameID", stockOpnameID) :
                new ObjectParameter("StockOpnameID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LIST_COUNT_STOCK_OPNAME_COVER>("SP_LIST_COUNT_STOCK_OPNAME_COVER", idStockParameter, stockOpnameIDParameter, productIDParameter);
        }
    
        public virtual ObjectResult<SP_LIST_SCAN_IN_STOCK_OPNAME> SP_LIST_SCAN_IN_STOCK_OPNAME(string stockOpnameID, string productID)
        {
            var stockOpnameIDParameter = stockOpnameID != null ?
                new ObjectParameter("StockOpnameID", stockOpnameID) :
                new ObjectParameter("StockOpnameID", typeof(string));
    
            var productIDParameter = productID != null ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LIST_SCAN_IN_STOCK_OPNAME>("SP_LIST_SCAN_IN_STOCK_OPNAME", stockOpnameIDParameter, productIDParameter);
        }
    }
}
